name: Universal Resolver DID

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

env:
  IMAGE_NAME: mailbox

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      # - run: npm test

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Define Docker image version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build docker image
        run: docker build . --tag $IMAGE_NAME:$VERSION

      - name: Log into GitHub Container Registry
        if: github.event_name == 'push'
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u actions-docker --password-stdin

      - name: Push image to GitHub Container Registry
        if: github.event_name == 'push'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION